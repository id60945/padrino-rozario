#!/usr/bin/env ruby
# encoding: utf-8

# Скрипт для связывания существующих smiles с orders
# Нужно запустить в Padrino console

puts "Скрипт для связывания smiles с orders"
puts "Запустите в Padrino console следующий код:"
puts ""
puts "# 1. Добавить колонку в MySQL (если ещё не добавлена):"
puts "ALTER TABLE smiles ADD COLUMN order_id INT;"
puts "CREATE INDEX index_smiles_on_order_id ON smiles(order_id);"
puts ""
puts "# 2. Связать существующие smiles с orders:"
puts ""
puts "linked_count = 0"
puts "skipped_count = 0"
puts ""
puts "Smile.where(order_id: nil).each do |smile|"
puts "  next unless smile.json_order.present?"
puts "  "
puts "  begin"
puts "    # Парсим json_order для получения списка товаров"
puts "    order_data = JSON.parse(smile.json_order)"
puts "    next if order_data.empty?"
puts "    "
puts "    product_ids = []"
puts "    order_data.each do |item|"
puts "      if item[1] && item[1]['id']"
puts "        product_ids << item[1]['id'].to_i"
puts "      end"
puts "    end"
puts "    "
puts "    next if product_ids.empty?"
puts "    "
puts "    # Ищем заказ по дате и составу товаров"
puts "    # Диапазон дат: от 7 дней до создания smile до 1 дня после"
puts "    date_range = (smile.created_at - 7.days)..(smile.created_at + 1.day)"
puts "    potential_orders = Order.where(created_at: date_range)"
puts "    "
puts "    found_order = nil"
puts "    potential_orders.each do |order|"
puts "      next unless order.cart.present?"
puts "      "
puts "      begin"
puts "        cart_data = JSON.parse(order.cart)"
puts "        order_product_ids = []"
puts "        "
puts "        cart_data.each do |cart_item|"
puts "          if cart_item[1] && cart_item[1]['id']"
puts "            order_product_ids << cart_item[1]['id'].to_i"
puts "          end"
puts "        end"
puts "        "
puts "        # Проверяем, что все товары из smile есть в order"
puts "        if (product_ids - order_product_ids).empty?"
puts "          found_order = order"
puts "          break"
puts "        end"
puts "      rescue JSON::ParserError"
puts "        next"
puts "      end"
puts "    end"
puts "    "
puts "    if found_order"
puts "      smile.order_id = found_order.id"
puts "      smile.save!"
puts "      linked_count += 1"
puts "      puts \"Linked smile #{smile.id} to order #{found_order.id} (user #{found_order.useraccount_id})\""
puts "    else"
puts "      skipped_count += 1"
puts "      puts \"Could not find matching order for smile #{smile.id}\""
puts "    end"
puts "    "
puts "  rescue => e"
puts "    puts \"Error processing smile #{smile.id}: #{e.message}\""
puts "    skipped_count += 1"
puts "  end"
puts "end"
puts ""
puts "puts \"Finished linking smiles to orders.\""
puts "puts \"Linked: #{linked_count}, Skipped: #{skipped_count}\""
puts ""
puts "# 3. Проверить результат:"
puts "Smile.joins(:order => :useraccount).limit(5).each { |s| puts \"#{s.id}: #{s.customer_name}\" }"
